- include_vars: common-vars.yml.vault

- name: Check that the current machine is a Fedora 24
  assert: { that: "ansible_distribution == 'Fedora' and ansible_distribution_version == '24'" }

###############################################################################################
# install packages
#
- { include: get-and-cache.yml, toget: "http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-24.noarch.rpm" }

- name: Install RPMFusion free repository
  dnf: name="{{ cached }}" state=present
  tags: rpmfusion

- { include: get-and-cache.yml, toget: "http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-24.noarch.rpm" }

- name: Install RPMFusion non-free repository
  dnf: name="{{ cached }}" state=present
  tags: rpmfusion

- name: install packages
  dnf: name={{ item }} state=present
  with_items:
   - zsh
   - libselinux-python
   - git
   - git-gui
   - tig
   - tree
   - unzip
   - vagrant
   - vagrant-libvirt
   - VirtualBox
   - kernel-devel
   - golang
   - java-1.8.0-openjdk-devel
   - groovy
   - ntpdate
   - tmux
   - tmuxinator
   - keepass
   - vlc
   - powerline
   - tmux-powerline
   - vim-powerline

###############################################################################################
# Docker
#
# - include: docker.yml

###############################################################################################
# tools settings
#

- name: configure git name
  git_config: 
    name=user.name 
    scope=system
    value="{{ user.fullName }}"

- name: configure git email
  git_config: 
    name=user.email
    scope=system 
    value="{{ user.email }}"

- name: set default shell to zsh
  user: name={{ user.name }} shell=/usr/bin/zsh state=present

- name: install oh-my-zsh
  git: repo=https://github.com/robbyrussell/oh-my-zsh dest={{ user.home }}/.oh-my-zsh

- name: clone fzf repository
  git: repo=https://github.com/junegunn/fzf.git dest={{ user.home }}/.fzf

- name: install fzf
  shell: "{{ user.home }}/.fzf/install --all"
  changed_when: false

- name: add fzf zsh config file
  template: src=fzf.zsh owner={{ user.name }} group={{ user.name }} dest={{ user.home }}/.fzf.zsh mode=644

- name: add zshrc file
  template: src=zshrc owner={{ user.name }} group={{ user.name }} dest={{ user.home }}/.zshrc mode=644

- name: add tmux config file (powerline)
  template: src=tmux.conf owner={{ user.name }} group={{ user.name }} dest={{ user.home }}/.tmux.conf mode=644

- name: add tmuxinator-completion file for zsh
  copy: src=tmuxinator-completion.zsh owner={{ user.name }} group={{ user.name }} dest={{ user.home }}/.tmuxinator-completion.zsh mode=644

- name: create tmuxinator config directories
  file: path={{ user.home }}/.tmuxinator owner={{ user.name }} group={{ user.name }} state=directory

- name: add tmuxinator config file
  template: src=tmuxinator/work.yml owner={{ user.name }} group={{ user.name }} dest={{ user.home }}/.tmuxinator/work.yml

- name: add vimrc file
  template: src=vimrc owner={{ user.name }} group={{ user.name }} dest={{ user.home }}/.vimrc mode=644

###############################################################################################
# VirtualBox
#

# Installing the typical 'kmod-VirtualBox' package through dnf won't work because it has to be
# aligned/republished with the latest kernel and it rarely is.
- name: Configure kernel module for VirtualBox
  shell:  'akmods --kernel $( uname -r )'
  changed_when: false
  tags: VirtualBox

- name: Configure kernel module for VirtualBox
  shell: systemctl restart systemd-modules-load.service
  changed_when: false
  tags: VirtualBox
