- include_vars: common-vars.yml

- name: Check that the current machine is a Fedora 27
  assert: { that: "ansible_distribution == 'Fedora' and ansible_distribution_version == '27'" }

###############################################################################################
# install packages
#
- name: Install RPMFusion free repository
  dnf:
    name: "http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-27.noarch.rpm"
    state: present
  tags: rpmfusion

- name: Install RPMFusion non-free repository
  dnf:
    name: "http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-27.noarch.rpm"
    state: present
  tags: rpmfusion

- name: install packages
  dnf:
    name: "{{ item }}"
    state: present
  with_items:
   - zsh
   - libselinux-python
   - git
   - tig
   - htop
   - tree
   - unzip
   - vagrant
   - vagrant-libvirt
   - VirtualBox
   - kernel-devel
   - golang
   - java-1.8.0-openjdk-devel
   - groovy
   - ntpdate
   - tmux
   - tmuxinator
   - keepass
   - vlc
   - powerline
   - tmux-powerline
   - vim-X11
   - vim-powerline
   - vifm
   - maven
   - gradle
   - python3-pip
   - python2-pip

- name: install python packages
  pip:
    name: "{{ item.name }}"
    version: "{{ item.version }}"
    state: present
  with_items:
    - { name: awscli, version: 1.12.1 }

###############################################################################################
# Docker
#
- include: docker.yml

###############################################################################################
# Terraform
#
- include: terraform.yml

###############################################################################################
# Packer
#
- include: packer.yml

###############################################################################################
# Kubectl
#
- include: kubernetes.yml

###############################################################################################
# tools settings
#

# Disable beep/bell on Gnome :
# gsettings set org.gnome.desktop.wm.preferences audible-bell false

- name: configure git name
  git_config:
    name: user.name
    scope: system
    value: "{{ user.fullName }}"

- name: configure git email
  git_config:
    name: user.email
    scope: system
    value: "{{ user.email }}"

- name: set default shell to zsh
  user:
    name: "{{ user.name }}"
    shell: /usr/bin/zsh
    state: present

- name: install oh-my-zsh
  git:
    repo: "https://github.com/robbyrussell/oh-my-zsh"
    dest: "{{ user.home }}/.oh-my-zsh"

- name: clone fzf repository
  git:
    repo: "https://github.com/junegunn/fzf.git"
    dest: "{{ user.home }}/.fzf"

- name: install fzf
  shell: "{{ user.home }}/.fzf/install --all"
  changed_when: false

- name: add fzf zsh config file
  template:
    src: fzf.zsh
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    dest: "{{ user.home }}/.fzf.zsh"
    mode: 0644

- name: add zshrc file
  template:
    src: zshrc
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    dest: "{{ user.home }}/.zshrc"
    mode: 0644

- name: add tmux config file (powerline)
  template:
    src: tmux.conf
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    dest: "{{ user.home }}/.tmux.conf"
    mode: 0644

- name: add tmuxinator-completion file for zsh
  copy:
    src: "tmuxinator-completion.zsh"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    dest: "{{ user.home }}/.tmuxinator-completion.zsh"
    mode: 0644

- name: create tmuxinator config directories
  file:
    path: "{{ user.home }}/.tmuxinator"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    state: directory

- name: add tmuxinator config file
  template:
    src: tmuxinator/work.yml
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    dest: "{{ user.home }}/.tmuxinator/work.yml"

- name: add vimrc file
  template:
    src: vimrc
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    dest: "{{ user.home }}/.vimrc"
    mode: 0644

- name: create vim color config directory
  file:
    path: "{{ user.home }}/.vim/colors/"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    state: directory

- name: download lucius vim template
  get_url:
    url: "https://raw.githubusercontent.com/jonathanfilip/vim-lucius/master/colors/lucius.vim"
    dest: "{{ user.home }}/.vim/colors/lucius.vim"

- name: add vifm_solarized-dark color schema
  template:
    src: vifm-solarized-dark
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    dest: "{{ user.home }}/.config/vifm/colors/solarized-dark"
    mode: 0644

- name: set vifm color schema
  lineinfile:
    dest: "{{ user.home }}/.config/vifm/vifmrc"
    line: 'colorscheme solarized-dark'
    insertafter: EOF
    state: present

###############################################################################################
# VirtualBox
#

# Installing the typical 'kmod-VirtualBox' package through dnf won't work because it has to be
# aligned/republished with the latest kernel and it rarely is.
- name: Configure kernel module for VirtualBox
  shell:  'akmods --kernel $( uname -r )'
  changed_when: false
  tags: VirtualBox

- name: Configure kernel module for VirtualBox
  shell: systemctl restart systemd-modules-load.service
  changed_when: false
  tags: VirtualBox
