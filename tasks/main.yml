- include_vars: common-vars.yml
  tags:
    - git

- name: Check that the current machine is a Ubuntu
  assert: { that: "ansible_distribution == 'Ubuntu'" }

###############################################################################################
# install packages
#

- name: install packages
  apt:
    package: "{{ item }}"
    state: present
  with_items:
   - git
   - tig
   - htop
   - tree
   - jq
   - curl
   - powerline
   - unzip
   - golang
   - openjdk-8-jdk
   - groovy
   - ntpdate
   - tmux
   - tmuxinator
   - keepassx
   - vlc
   - maven
   - gradle
   - python3-pip
   - python-pip
   - autojump
   - scdaemon
   - network-manager-openvpn
   - tcpdump 
   - ssldump

- name: install python packages
  pip:
    name: "{{ item.name }}"
    version: "{{ item.version }}"
    state: present
  with_items:
    - { name: awscli, version: 1.12.1 }

###############################################################################################
# Docker
#
- include: docker.yml

###############################################################################################
# Terraform
#
- include: terraform.yml
  tags:
    - terraform

###############################################################################################
# Packer
#
- include: packer.yml

###############################################################################################
# Vault
#
- include: vault.yml

###############################################################################################
# Kubectl
#
- include: kubernetes.yml

###############################################################################################
# tools settings
#

# Disable beep/bell on Gnome :
# gsettings set org.gnome.desktop.wm.preferences audible-bell false
#

- name: configure git user infos, aliases
  become: no
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: global
  loop:
    - { name: "user.name", value: "{{ user.fullName }}" }
    - { name: "user.email", value: "{{ user.email }}" }
    - { name: "push.default", value: "simple" }
    - { name: "alias.ci", value: "commit" }
    - { name: "alias.co", value: "checkout" }
    - { name: "alias.r", value: "rebase" }
    - { name: "alias.rha", value: "reset --hard" }
    - { name: "commit.template", value: "~/.gitmessage" }
  tags:
    - git

- name: configure git GPG config
  become: no
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: global
  when: user.gpgsign is defined and user.gpgsign == true
  loop:
    - { name: "commit.gpgsign", value: "true" }
    - { name: "user.signingkey", value: "{{ user.signingkey }}" }

- name: clone fzf repository
  become: no
  git:
    repo: "https://github.com/junegunn/fzf.git"
    dest: "{{ user.home }}/.fzf"

- name: install fzf
  shell: "{{ user.home }}/.fzf/install --all"
  changed_when: false

- name: add bashrc file
  template:
    src: bashrc
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    dest: "{{ user.home }}/.bashrc"
    mode: 0644

- name: add tmux config file (powerline)
  template:
    src: tmux.conf
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    dest: "{{ user.home }}/.tmux.conf"
    mode: 0644

- name: create tmuxinator config directories
  file:
    path: "{{ user.home }}/.tmuxinator"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    state: directory

- name: add vimrc file
  template:
    src: vimrc
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    dest: "{{ user.home }}/.vimrc"
    mode: 0644

- name: create vim color config directory
  file:
    path: "{{ user.home }}/.vim/colors/"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    state: directory

- name: download lucius vim template
  get_url:
    url: "https://raw.githubusercontent.com/jonathanfilip/vim-lucius/master/colors/lucius.vim"
    dest: "{{ user.home }}/.vim/colors/lucius.vim"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
